{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api' // Update with your backend URL\n});\n\n//  Automatically attach token\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\n//loactions\nexport const postLocation = ({\n  latitude,\n  longitude,\n  userId\n}) => API.post('/locations/view', {\n  latitude,\n  longitude,\n  userId\n}); // userId optional\n\nexport const getLocations = userId => API.get(`/locations${userId ? `?userId=${userId}` : ''}`);\n\n//  OTP\nexport const sendOtp = email => API.post('/users/send-otp', {\n  email\n});\nexport const verifyOtp = (email, otp) => API.post('/users/verify-otp', {\n  email,\n  otp\n});\n\n//  Devotee Auth\n//\nexport const signup = userData => API.post('/users/add', userData);\nexport const login = userData => API.post('/users/login', userData);\nexport const getAllDevotees = () => API.get('/users/view');\n\n//\n// ðŸ”¹ Pandit Auth\n//\nexport const panditSignup = data => API.post('/pandits/signup', data);\nexport const panditLogin = data => API.post('/pandits/login', data);\n\n//\n// ðŸ”¹ Admin: View\n//\nexport const getUsers = () => API.get('/users/view');\nexport const getAllPandits = () => API.get('/pandits/admin-view');\nexport const getAllPoojas = () => API.get('/poojas/view');\n\n//\n// ðŸ”¹ Admin: Pandit Management\n//\n\n//\n// ðŸ”¹ Google Auth\nexport const googleLogin = credential => API.post('/users/google-login', {\n  credential\n});\nexport const verifyPandit = id => API.put(`/pandits/verify/${id}`);\nexport const uploadPanditPhoto = (id, formData) => API.post(`/pandits/upload/${id}`, formData, {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\n//\n// ðŸ”¹ Pandit (Public)\n//\nexport const getVerifiedPandits = () => API.get('/pandits/view');\nexport const deletePandit = async id => {\n  return await fetch(`http://localhost:5000/api/pandits/delete/${id}`, {\n    method: 'DELETE'\n  });\n};\n\n//\n// ðŸ”¹ Pooja Management\n//\nexport const getPoojas = () => API.get('/poojas/view');\nexport const addPooja = poojaData => API.post('/poojas/add', poojaData);\nexport const updatePooja = (id, data) => API.put(`/poojas/update/${id}`, data);\nexport const deletePooja = id => API.delete(`/poojas/delete/${id}`);\n\n//\n// ðŸ”¹ Booking\n//\nexport const createBooking = bookingData => API.post('/bookings/create', bookingData);\nexport const getBookings = (params = {}) => API.get('/bookings/view', {\n  params\n});\nexport const getBookingsByUser = userid => API.get(`/bookings/user/${userid}`);\n\n//\n// ðŸ”¹ Services\n//\nexport const getServices = () => API.get('/services/view');\n\n//\n// ðŸ”¹ Notifications\n//\nexport const getNotifications = () => API.get('/notifications');\nexport const markNotificationAsRead = id => API.put(`/notifications/${id}`);\n\n//\n// ðŸ”¹ Payments\n//\nexport const createPayment = paymentData => API.post('/payments', paymentData);\nexport const getPayments = () => API.get('/payments');\n\n//\n// ðŸ”¹ Reviews\n//\nexport const createReview = reviewData => API.post('/reviews/submit', reviewData);\nexport const getReviews = () => API.get('/reviews/view');\nexport const deleteReview = id => API.delete(`/reviews/${id}`);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","postLocation","latitude","longitude","userId","post","getLocations","get","sendOtp","email","verifyOtp","otp","signup","userData","login","getAllDevotees","panditSignup","data","panditLogin","getUsers","getAllPandits","getAllPoojas","googleLogin","credential","verifyPandit","id","put","uploadPanditPhoto","formData","getVerifiedPandits","deletePandit","fetch","method","getPoojas","addPooja","poojaData","updatePooja","deletePooja","delete","createBooking","bookingData","getBookings","params","getBookingsByUser","userid","getServices","getNotifications","markNotificationAsRead","createPayment","paymentData","getPayments","createReview","reviewData","getReviews","deleteReview"],"sources":["C:/Users/hp/Desktop/super150/startup/project/pandit-booking-frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000/api', // Update with your backend URL\r\n});\r\n\r\n//  Automatically attach token\r\nAPI.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\n//loactions\r\nexport const postLocation = ({ latitude, longitude, userId }) =>\r\n  API.post('/locations/view', { latitude, longitude, userId }); // userId optional\r\n\r\nexport const getLocations = (userId) =>\r\n  API.get(`/locations${userId ? `?userId=${userId}` : ''}`);\r\n\r\n\r\n//  OTP\r\nexport const sendOtp = email => API.post('/users/send-otp', { email });\r\nexport const verifyOtp = (email, otp) => API.post('/users/verify-otp', { email, otp });\r\n\r\n//  Devotee Auth\r\n//\r\nexport const signup = userData => API.post('/users/add', userData);\r\nexport const login = userData => API.post('/users/login', userData);\r\nexport const getAllDevotees = () => API.get('/users/view');\r\n\r\n//\r\n// ðŸ”¹ Pandit Auth\r\n//\r\nexport const panditSignup = data => API.post('/pandits/signup', data);\r\nexport const panditLogin = data => API.post('/pandits/login', data);\r\n\r\n//\r\n// ðŸ”¹ Admin: View\r\n//\r\nexport const getUsers = () => API.get('/users/view');\r\nexport const getAllPandits = () => API.get('/pandits/admin-view');\r\nexport const getAllPoojas = () => API.get('/poojas/view');\r\n\r\n//\r\n// ðŸ”¹ Admin: Pandit Management\r\n//\r\n\r\n\r\n//\r\n// ðŸ”¹ Google Auth\r\nexport const googleLogin = (credential) =>\r\n  API.post('/users/google-login', { credential });\r\n\r\nexport const verifyPandit = id => API.put(`/pandits/verify/${id}`);\r\nexport const uploadPanditPhoto = (id, formData) =>\r\n  API.post(`/pandits/upload/${id}`, formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n  });\r\n\r\n//\r\n// ðŸ”¹ Pandit (Public)\r\n//\r\nexport const getVerifiedPandits = () => API.get('/pandits/view');\r\nexport const deletePandit = async (id) => {\r\n  return await fetch(`http://localhost:5000/api/pandits/delete/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n};\r\n\r\n\r\n//\r\n// ðŸ”¹ Pooja Management\r\n//\r\nexport const getPoojas = () => API.get('/poojas/view');\r\nexport const addPooja = poojaData => API.post('/poojas/add', poojaData);\r\nexport const updatePooja = (id, data) => API.put(`/poojas/update/${id}`, data);\r\nexport const deletePooja = id => API.delete(`/poojas/delete/${id}`);\r\n\r\n//\r\n// ðŸ”¹ Booking\r\n//\r\nexport const createBooking = bookingData => API.post('/bookings/create', bookingData);\r\nexport const getBookings = (params = {}) => API.get('/bookings/view', { params });\r\nexport const getBookingsByUser = (userid) => API.get(`/bookings/user/${userid}`);\r\n\r\n\r\n\r\n//\r\n// ðŸ”¹ Services\r\n//\r\nexport const getServices = () => API.get('/services/view');\r\n\r\n//\r\n// ðŸ”¹ Notifications\r\n//\r\nexport const getNotifications = () => API.get('/notifications');\r\nexport const markNotificationAsRead = id => API.put(`/notifications/${id}`);\r\n\r\n//\r\n// ðŸ”¹ Payments\r\n//\r\nexport const createPayment = paymentData => API.post('/payments', paymentData);\r\nexport const getPayments = () => API.get('/payments');\r\n\r\n//\r\n// ðŸ”¹ Reviews\r\n//\r\nexport const createReview = reviewData => API.post('/reviews/submit', reviewData);\r\nexport const getReviews = () => API.get('/reviews/view');\r\nexport const deleteReview = id => API.delete(`/reviews/${id}`);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}